---
name: 'Terraform'
on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - 'website/**'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'website/**'
jobs:
  from-scratch:
    name: From Scratch
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tf_root:
          - tests/k3s-docker
    env:
      TF_VAR_repo_url: ${{ github.server_url }}/${{ github.actor }}/devops-stack.git
      TF_VAR_target_revision: ${{ github.head_ref }}
    defaults:
      run:
        working-directory: ${{ matrix.tf_root }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.4

      - name: Setup ArgoCD
        run: |
          mkdir "$GITHUB_WORKSPACE/bin"
          curl -L https://github.com/argoproj/argo-cd/releases/download/v2.0.5/argocd-linux-amd64 > "$GITHUB_WORKSPACE/bin/argocd"
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          chmod +x "$GITHUB_WORKSPACE/bin/argocd"

      - name: Terraform Format
        run: terraform fmt -check -diff -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Apply
        if: github.event_name == 'pull_request'
        env:
          TF_VAR_repo_url: ${{ github.server_url }}/${{ github.actor }}/devops-stack.git
          TF_VAR_target_revision: ${{ github.head_ref }}
        run: terraform apply --auto-approve

      - name: Extract branch name
        if: github.event_name == 'push'
        shell: bash
        run: echo "TF_VAR_target_revision=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Terraform Apply
        if: github.event_name == 'push'
        env:
          TF_VAR_repo_url: ${{ github.server_url }}/${{ github.repository }}
        run: terraform apply --auto-approve

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        env:
          TF_VAR_repo_url: ${{ github.server_url }}/${{ github.actor }}/devops-stack.git
          TF_VAR_target_revision: ${{ github.head_ref }}
        run: terraform plan --detailed-exitcode -no-color

      - name: Terraform Plan
        if: github.event_name == 'push'
        env:
          TF_VAR_repo_url: ${{ github.server_url }}/${{ github.repository }}
        run: terraform plan --detailed-exitcode -no-color

      - name: Destroy Cluster
        run: terraform destroy --auto-approve
