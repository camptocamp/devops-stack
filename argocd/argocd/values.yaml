---
argo-cd:
  installCRDs: false
  global:
    securityContext:
      runAsUser: 999
      runAsGroup: 999
      fsGroup: 999
  configs:
    secret:
      argocdServerAdminPassword: "$2a$10$wzUzrdx.jMb7lHIbW6VutuRpV4OnpPA3ItWBDiP04QVHfGqzAoj6i"  # argocd
      argocdServerAdminPasswordMtime: '2020-07-23T11:31:23Z'
  controller:
    metrics:
      serviceMonitor:
        enabled: true
      rules:
        enabled: true
        spec:
          - alert: ArgoAppMissing
            expr: |
              absent(argocd_app_info)
            for: 15m
            labels:
              severity: critical
            annotations:
              summary: "[ArgoCD] No reported applications"
              description: >
                ArgoCD has not reported any applications data for the past 15 minutes which
                means that it must be down or not functioning properly.  This needs to be
                resolved for this cloud to continue to maintain state.
          - alert: ArgoAppNotSynced
            expr: |
              argocd_app_sync_status{sync_status!="Synced"} == 1
            for: 12h
            labels:
              severity: warning
            annotations:
              summary: "[{{`{{$labels.name}}`}}] Application not synchronized"
              description: >
                The application [{{`{{$labels.name}}`}} has not been synchronized for over
                12 hours which means that the state of this cloud has drifted away from the
                state inside Git.
  server:
    metrics:
      serviceMonitor:
        enabled: true
    extraArgs:
      - --insecure
    config:
      accounts.pipeline: apiKey
      resource.customizations: |
        networking.k8s.io/Ingress:
          health.lua: |
            hs = {}
            hs.status = "Healthy"
            return hs
      configManagementPlugins: |
        - name: kustomized-helm
          init:
            command: ["/bin/sh", "-c"]
            args: ["helm dependency build || true"]
          generate:
            command: ["/bin/sh", "-c"]
            args: ["echo \"$HELM_VALUES\" | helm template . --name-template $ARGOCD_APP_NAME --namespace $ARGOCD_APP_NAMESPACE $HELM_ARGS -f - --include-crds > all.yaml && kustomize build"]
    rbacConfig:
      policy.default: role:readonly
      policy.csv: |
        g, pipeline, role:readonly
  repoServer:
    metrics:
      serviceMonitor:
        enabled: true
