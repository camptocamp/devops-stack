---
name: 'Terraform'
on:
  push:
    branches:
      - blue
      - green
  pull_request:
jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      CAMPTOCAMP_DEVOPS_STACK_VERSION: 0.27.0
      TF_ROOT: terraform
    defaults:
      run:
        working-directory: ${{ env.TF_ROOT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.6

      - name: Set Terraform workspace
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "TF_WORKSPACE=${{ github.base_ref }}" >> $GITHUB_ENV

      - name: Set Terraform workspace
        if: github.event_name == 'push'
        shell: bash
        run: echo "TF_WORKSPACE=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Terraform Format
        run: terraform fmt -check -diff -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -out plan

      - name: Set env
        if: github.event_name == 'pull_request'
        run: |
          terraform-bin output -json kubeconfig | jq -r . > ${{ github.workspace }}/kubeconfig
          echo "ARGOCD_AUTH_TOKEN=$(terraform-bin output -json argocd_auth_token | jq -r .)" >> $GITHUB_ENV
          terraform-bin show -json plan > plan.json
          echo "REPO_URL=$(jq -r '.planned_values.outputs.repo_url.value' plan.json)" >> $GITHUB_ENV
          jq -r '.planned_values.outputs.kubeconfig.value' plan.json > ${{ github.workspace }}/kubeconfig
          echo "TARGET_REVISION=$(jq -r '.planned_values.outputs.target_revision.value' plan.json)" >> $GITHUB_ENV
          # FIXME: find a more robust way to do this
          jq -r '.planned_values.outputs.app_of_apps_values.value[0]' plan.json > ${{ github.workspace }}/values0.yaml
          jq -r '.planned_values.outputs.app_of_apps_values.value[1]' plan.json > ${{ github.workspace }}/values1.yaml
          jq -r '.planned_values.outputs.app_of_apps_values.value[2]' plan.json > ${{ github.workspace }}/values2.yaml

      - name: Install aws-iam-authenticator
        run: |
          mkdir -p ${{ github.workspace }}/bin
          curl -o ${{ github.workspace }}/bin/aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
          chmod +x ${{ github.workspace }}/bin/aws-iam-authenticator
          echo "PATH=${{ github.workspace }}/bin:$PATH" >> $GITHUB_ENV

      - name: ArgoCD app diff with ${{ github.ref }}
        if: github.event_name == 'pull_request'
        uses: docker://argoproj/argocd:v1.8.5
        env:
          KUBECONFIG: ${{ github.workspace }}/kubeconfig
          APP_OF_APPS_VALUES_0 : ${{ github.workspace }}/values0.yaml
          APP_OF_APPS_VALUES_1 : ${{ github.workspace }}/values1.yaml
          APP_OF_APPS_VALUES_2 : ${{ github.workspace }}/values2.yaml
        with:
          entrypoint: ./.github/scripts/app-diff.sh

      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply --auto-approve

      - name: Terraform Plan
        if: github.event_name == 'push'
        run: terraform plan --detailed-exitcode -no-color
