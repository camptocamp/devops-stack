---
baseDomain: ${base_domain}

apps:
  efs-provisioner:
    enabled: ${enable_efs}

argo-cd:
  server:
    config:
      url: https://argocd.apps.${cluster_name}.${base_domain}
      oidc.config: |
        name: Cognito
        issuer: https://cognito-idp.${aws_default_region}.amazonaws.com/${cognito_user_pool_id}
        clientID: ${cognito_user_pool_client_id}
        clientSecret: ${cognito_user_pool_client_secret}
        requestedScopes: ["openid", "profile", "email"]
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - argocd.apps.${base_domain}
        - argocd.apps.${cluster_name}.${base_domain}
      tls:
        - secretName: argocd-tls
          hosts:
            - argocd.apps.${base_domain}
            - argocd.apps.${cluster_name}.${base_domain}
    rbacConfig:
      policy.default: role:readonly
      policy.csv: |
        g, pipeline, role:readonly
        g, argocd-admin, role:admin
      scopes: '[cognito:groups]'

cert-manager:
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: ${cert_manager_assumable_role_arn}
  clusterIssuers:
    letsencrypt:
      enabled: true
    acme:
      solvers:
        - dns01:
            route53:
              region: ${aws_default_region}

efs-provisioner:
  efsProvisioner:
    efsFileSystemId: ${efs_filesystem_id}
    awsRegion: ${aws_default_region}
    dnsName: ${efs_dns_name}

kube-prometheus-stack:
  alertmanager:
    service:
      targetPort: 9095
    alertmanagerSpec:
      containers:
        - args:
            - --http-address=0.0.0.0:9095
            - --upstream=http://localhost:9093
            - --provider=oidc
            - --oidc-issuer-url=https://cognito-idp.${aws_default_region}.amazonaws.com/${cognito_user_pool_id}
            - --client-id=${cognito_user_pool_client_id}
            - --client-secret=${cognito_user_pool_client_secret}
            - --cookie-secure=false
            - --cookie-secret=${cookie_secret}
            - --email-domain=*
            - --redirect-url=https://alertmanager.apps.${cluster_name}.${base_domain}/oauth2/callback
          image: quay.io/pusher/oauth2_proxy:v6.1.1
          name: alertmanager-proxy
          ports:
            - containerPort: 9095
              name: web
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - alertmanager.apps.${base_domain}
        - alertmanager.apps.${cluster_name}.${base_domain}
      tls:
        - secretName: alertmanager-tls
          hosts:
            - alertmanager.apps.${base_domain}
            - alertmanager.apps.${cluster_name}.${base_domain}

  prometheus:
    service:
      port: 9091
      targetPort: 9091
      additionalPorts:
        - name: web
          port: 9090
          targetPort: 9090
    prometheusSpec:
      portName: proxy
      containers:
        - args:
            - --http-address=0.0.0.0:9091
            - --upstream=http://localhost:9090
            - --provider=oidc
            - --oidc-issuer-url=https://cognito-idp.${aws_default_region}.amazonaws.com/${cognito_user_pool_id}
            - --client-id=${cognito_user_pool_client_id}
            - --client-secret=${cognito_user_pool_client_secret}
            - --cookie-secure=false
            - --cookie-secret=${cookie_secret}
            - --email-domain=*
            - --redirect-url=https://prometheus.apps.${cluster_name}.${base_domain}/oauth2/callback
          image: quay.io/pusher/oauth2_proxy:v6.1.1
          name: prometheus-proxy
          ports:
            - containerPort: 9091
              name: proxy
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
      hosts:
        - prometheus.apps.${base_domain}
        - prometheus.apps.${cluster_name}.${base_domain}
      tls:
        - secretName: prometheus-tls
          hosts:
            - prometheus.apps.${base_domain}
            - prometheus.apps.${cluster_name}.${base_domain}

  grafana:
    grafana.ini:
      auth.generic_oauth:
        name: Cognito
        enabled: true
        allow_sign_up: true
        client_id: ${cognito_user_pool_client_id}
        client_secret: ${cognito_user_pool_client_secret}
        scopes: "openid profile email"
        auth_url: https://${cognito_user_pool_domain}.auth.${aws_default_region}.amazoncognito.com/oauth2/authorize
        token_url: https://${cognito_user_pool_domain}.auth.${aws_default_region}.amazoncognito.com/oauth2/token
        api_url: https://${cognito_user_pool_domain}.auth.${aws_default_region}.amazoncognito.com/oauth2/userInfo
      server:
        domain: grafana.apps.${cluster_name}.${base_domain}
        root_url: "https://%(domain)s"
    sidecar:
      datasources:
        defaultDatasourceEnabled: false
    additionalDataSources:
      - name: Prometheus
        type: prometheus
        # TODO: fix this 9091 with oauthPassThru
        #url: http://kube-prometheus-stack-prometheus:9091/
        url: http://kube-prometheus-stack-prometheus:9090/
        access: proxy
        isDefault: true
        jsonData:
          tlsAuth: false
          tlsAuthWithCACert: false
          oauthPassThru: true
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.tls: "true"
      hosts:
        - grafana.apps.${base_domain}
        - grafana.apps.${cluster_name}.${base_domain}
      tls:
        - secretName: grafana-tls
          hosts:
            - grafana.apps.${base_domain}
            - grafana.apps.${cluster_name}.${base_domain}

loki-stack:
  loki:
    config:
      schema_config:
        configs:
          - from: 2020-10-24
            store: boltdb-shipper
            object_store: s3
            schema: v11
            index:
              prefix: index_
              period: 24h

      storage_config:
        aws:
          s3: s3://${aws_default_region}/${loki_bucket_name}

        boltdb_shipper:
          active_index_directory: /data/loki/index
          shared_store: s3
          cache_location: /data/loki/boltdb-cache

    serviceAccount:
      annotations:
        eks.amazonaws.com/role-arn: ${loki_assumable_role_arn}

traefik:
  ports:
    web:
      hostPort: 80
    websecure:
      hostPort: 443
  service:
    type: NodePort
